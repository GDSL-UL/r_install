[["index.html", "R Installation Guide Purpose", " R Installation Guide Francisco Rowe, Dani Arribas-Bel 2021-02-08 Purpose This resource provides step-by-step descriptions on how to install and run RStudio for ‘Spatial Modelling for Data Scientists’ from your own computer. Select your Operating System and follow the steps. A1 MacOS Installation A2 Linux Installation A3 Windows 10 Pro/Education A4 Windows 10 Home/pre-10 Need to find out your Windows version? Click HERE This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License. "],["macos.html", "MacOS Installation Installation Running RStudio", " MacOS Installation NOTE: This guide shows you how to install on MacOS via the gdsr Installation Requirements To be able to complete this guide, your machine will need to meet the following requirements: A stable internet connection ~10GB of space on your hard drive MacOS version 10.13 or newer i.e. High Sierra, Mojave, Catalina or Big Sur. If you are unsure what version you are running click on the Apple icon in the top left of the screen and then About this Mac. Mac hardware must be a 2010 model or newer Docker install steps Go to the dockerhub website. Ensure you meet the criteria for download (it is the same as stated above) and then select ‘Get Docker’ button. This will then download to your machine but may take some time. Once finished, to access this download go to Finder &gt; Downloads &gt; Docker.dmg and double click. You should then be prompted to drag and drop this application into the applications folder like so: You may get further windows asking for access to the program. To these you can click Open &gt; OK &gt; enter your account password and click Install helper After you have done this, the whale icon should now show in your taskbar: You have successfully downloaded Docker! Using Docker Now we have Docker installed we can use it to access Python and all the associated packages we need for the practicals Installing the GDSR environment Access your terminal: Launchpad &gt; Other &gt; Terminal In a fresh line in the terminal type the following to install the GDSR environment container: docker pull darribas/gdsr:1.0 This should now prompt a long download process that looks a bit like this: Don’t be alarmed if it seems to take a very long time. IMPORTANT: Make sure you are connected to the internet and it is a stable connection. This step involves the download of large amounts of data (ca. 5.5GB) so it might take a while. However, it only needs to be run once. Check success You will know the process has completed successfully when each line says ‘Pull complete’ and the new line shows your machine name. If everything has gone according to plan, you should see darribas/gdsr:1.0 show up on your terminal when you type docker image ls (NOTE in the image below there are other containers that are not required, do not worry if you don’t have those or slightly different values on the ID and the “CREATED” columns, the important bit is having darribas/gdsr:1.0 listed): Running RStudio The following sections cover how to spin up a session you have just installed, use it, and shut it down when you are done. Running the container In the new terminal line, type the following command to run the container: docker run -d -e PASSWORD=test123 -p 8787:8787 -v \"${PWD}\":/home/rstudio/work darribas/gdsr:1.0 You have now started a RStudio session. IMPORTANT: Please do NOT close the terminal window until you are finished in this RStudio session The following window will appear (If this doesn’t happen, go to 5): Go to System Preferences &gt; Security &amp; Privacy. The following window will appear: Click the lock (shown above) and enter your password. Now you can access the RStudio session. Go to your chosen web browser (e.g. Safari/Chrome) and type: localhost:8787 into the search bar The page that loads will prompt you for a username and password as shown above. Type the following (as on the figure above): username: rstudio password: test123 Now you are in RStudio Server, you can start coding or opening a new file. Please refer to Rowe and Arribas-Bel (2021) for an introduction to the RStudio interface, R Script and R Notebook. Using a R Notebook A R notebook is where you will run your code and can add text. The top header is called YAML metadata and each shaded box is called a kernel (or code chunk) contained within delimiters ```{r} and ```. Type 1 + 1 into a code chunk. To run the code click the play icon as indicated below. IMPORTANT: Make sure you save your files by you want to keep ONLY within the work folder, as this will ensure they are saved on your machine. Everything saved outside the work folder will be destroyed as soon as you shut down the session. You can access other files on your machine through the work folder in the Files Browser. From here you can navigate to your Documents and designated folder for this module. Here I am navigating to the san folder that we have created for this module in my Downloads. You can replace this with the pathway to the folder you create for this module. You can save your notebook here using File &gt; Save As And you can create new folders to organise your work Ending your session Once you have finished in your RStudio session and have saved all your work, you can end the session by closing your browser. Run docker ps: Then, type docker container rm and copy the CONTAINER ID from the output above as shown here: You can now safely shut the terminal window. Next time you go to run a R Notebook you will NOT need to repeat the whole process as you have already installed Docker and the GDSR environment. Instead you can start from Running the container and carry on from there. "],["linux.html", "Linux Installation Installation Running RStudio", " Linux Installation NOTE: This guide shows you how to install on Linux via the gdsr Installation Requirements To be able to complete this guide, your machine will need to meet the following requirements: A stable internet connection ~10GB of space on your hard drive A Linux distribution supported by Docker. You can check available distributions for ready installation on this page. NOTE If you are running a different distribution (e.g. Arch Linux), there is a good chance Docker will work, but you will have to source your own instructions for installation. Once you have Docker up and running on your machine, you can move to Installing the GDSR environment. Docker install steps Select the page for your distribution from the Docker Hub list of supported distributions For this example, we will use Ubuntu. Make sure that you meet the requirements to install Docker: Follow the steps specified on the official install guide: https://docs.docker.com/engine/install/ubuntu/ Once you complete these steps successfully, you will have Docker ready to go on your computer, congratulations! Installing the GDSR environment Once you have Docker installed and running on your machine, installing everything you need to run Python and associated libraries boils down to the following two steps: Open your terminal app of choice (for example, Gnome Terminal) Run the following command: docker pull darribas/gdsr:1.0 You will know this has completed when each line says ‘Pull complete.’ IMPORTANT: Make sure you are connected to the internet and it is a stable connection. This step involves the download of large amounts of data (ca. 10GB) so it might take a while. However, it only needs to be run once. Check success If everything has gone according to plan, you should see darribas/gdsr:1.0 show up on your terminal when you type docker image ls (note in the image below there are other containers that are not required, do not worry if you don’t have those or slightly different values on the ID and the “CREATED” columns, the important bit is having darribas/gdsr:1.0 listed): Running RStudio The following sections cover how to spin up the container you have just installed, use it, and shut it down when you are done. Running the container To start up RStudio through Docker, follow these steps: In a new terminal line, type the following command to run the container and hit enter: docker run -d -e PASSWORD=test123 -p 8787:8787 -v &quot;${PWD}&quot;:/home/rstudio/work darribas/gdsr:1.0 You have now started a RStudio session. To access this session go to your chosen web browser (e.g. Firefox/Chrome) and type: localhost:8787 into the search bar The page that loads will prompt you for a password. Type the following, as on the figure above: Username: rstudio Password: test123 Now you are in RStudio, you can start coding or opening a new file. Please refer to Rowe and Arribas-Bel (2021) for an introduction to the RStudio interface, R Script and R Notebook. Using a R Notebook A R notebook is where you will run your code and can add text. The top header is called YAML metadata and each shaded box is called a kernel (or code chunk) contained within delimiters ```{r} and ```. Type 1 + 1 into a code chunk. To run the code click the play icon as indicated below. IMPORTANT: Make sure you save your files by you want to keep ONLY within the work folder, as this will ensure they are saved on your machine. Everything saved outside the work folder will be destroyed as soon as you shut down the session. You can access other files on your machine through the work folder in the Files Browser. From here you can navigate to your Documents and designated folder for this module. Here I am navigating to the san folder that we have created for this module in my Downloads. You can replace this with the pathway to the folder you create for this module. You can save your notebook here using File &gt; Save As And you can create new folders to organise your work Ending your session Once you have finished in your RStudio session and have saved all your work, you can end the session by closing your browser. Run docker ps: Then, type docker container rm and copy the CONTAINER ID from the output above as shown here: You can now safely shut the terminal window. Next time you go to run a R Notebook you will NOT need to repeat the whole process as you have already installed Docker and the GDSR environment. Instead you can start from Running the container and carry on from there. "],["win10pro.html", "Windows 10 Pro/Education Installing Docker Running RStudio Server", " Windows 10 Pro/Education This guide shows you how to install Docker and run R/RStudio virtually using an environment we have created called darribas/gdsr:1.0. This approach is preferred for anyone using ‘Windows 10 Pro/Education’ because it avoids potential compatibility issues between the latest versions of R/RStudio and other software on your computer. Please therefore follow these steps even if R/RStudio is already installed on your computer. Installing Docker Requirements To be able to complete this guide, your machine will need to meet the following requirements: A stable internet connection ~10GB of space on your hard drive Windows 10 64-bit: Pro, Enterprise, or Education (Build 16299 or later). You can see the full requirements on the official Docker for Windows page. IMPORTANT: If you are not sure what version of Windows you are running, check out this guide. If you know you don’t have Windows 10 Pro, for example you are running Windows 10 Home, please use this install/run guide. Docker install steps Once you have everything required ready to go, the first step is to install the Docker Desktop App for Windows. Here are the steps you can follow: Head over to Docker Hub to download a copy of Docker for Windows: https://hub.docker.com/editions/community/docker-ce-desktop-windows/ Download a copy of the Docker Desktop (highlighted in red on the image above). Click “Save File.” Note the file is approximately 490Mb so, depending on your internet connection, it might take a while to download. Double click on the file you downloaded (a cute white whale on a blue background) and the “installation wizard” will appear. Follow the instructions on the installation wizard to authorize the installer and proceed with the install. You can check the process has completed successfully by following these steps: Open PowerShell from the “Start Menu” Check Docker is available by printing out the version you have installed: docker --version Note: Don’t worry if you have you installed a slightly different version of Docker - that’s OK. What you want to make sure is that it successfully prints out a version instead of a warning/error message (usually in red). Installing the container Once you have Docker installed and running on your machine, installing everything you need to run RStudio and associated packages boils down to the following two steps: Open PowerShell following the same steps as above (you can use the same window as before or a fresh new one). Run (type and hit “Enter”) the following command: docker pull darribas/gdsr:1.0 You will know this has completed when each line says ‘Pull complete.’ IMPORTANT: Make sure you are connected to the internet and it is a stable connection. This step involves the download of large amounts of data (ca. 10GB) so it might take a while. However, it only needs to be run once. Check success If everything has gone according to plan, you should see darribas/gdsr show up on your terminal when you type docker image ls: Running RStudio Server The following sections cover how to start up the software you have just installed, use it, and shut it down when you are done. Running the container In a new PowerShell window, type the following command to run the container and hit enter: docker run -d -e PASSWORD=test123 -p 8787:8787 -v ${PWD}:/home/rstudio/work darribas/gdsr:1.0 You have now started an RStudio session. IMPORTANT: Please do NOT close the PowerShell window until you are finished in this RStudio session To access this session go to your chosen web browser (e.g. Firefox/Chrome) and type: localhost:8888 into the search bar. The page that loads will prompt you for a username and password as shown. Type the following: username: rstudio password: test123 Now you are in RStudio Server, you can start coding or opening a new file. Please refer to Rowe and Arribas-Bel (2021) for an introduction to the RStudio interface, R Script and R Notebook. Using RStudio Server A R notebook is where you will run your code and can add text. The top header is called YAML metadata and each shaded box is called a kernel (or code chunk) contained within delimiters {r} and. Type 1 + 1 into a code chunk. To run the code click the play icon as highlighted in red below. IMPORTANT: Make sure you save files you want to keep ONLY within the work folder, as this will ensure they are saved on your machine. Everything saved outside the work folder will be destroyed as soon as you shut down the session. You can access other files on your machine through the work folder in the Files Browser. From here you can navigate to your Documents and designated folder for this module. Here I am navigating to the san folder that we have created for this module in my Downloads. You can replace this with the pathway to the folder you create for this module. You can save your notebook here using File &gt; Save As. And you can create new folders to organise your work. Ending your session Once you have finished in your RStudio session and have saved all your work, you can end the session by closing your browser. Then, type docker container stop and copy the CONTAINER ID from the output above as shown here: You can now safely shut the terminal window. Next time you go to run a R Notebook you will NOT need to repeat the whole process as you have already installed Docker and the GDSR environment. Instead you can start from Running the container and carry on from there. "],["otherWin.html", "Windows 10 Home/pre-10 Download and Install R Download and Install RStudio Open RStudio Install Packages Uninstall R and RStudio", " Windows 10 Home/pre-10 This guide covers the installation of R and RStudio on machines running Windows 10 Home Edition or versions of Windows prior to Windows 10 (e.g. Windows 7). With this approach, you will install R and RStudio “natively,” that is running directly on your operating system. If you are not sure what version of Windows you are running, check out this guide. IMPORTANT: This module has been written using the most up-to-date versions of R, RStudio and relevant packages. To avoid software compatibility issues it is important you have these same versions installed on your home computer. Therefore, if you have R or RStudio already installed on your computer, please first uninstall them unsing the instructions here. Download and Install R Download R R is the coding software that will execute the code you write in RStudio. NOTE: You need to install R before you install RStudio Open the R download page in your browser and click on Download R for Windows. Click on base (highlighted in red here) as you are installing R for the first time. Click on Download R 4.0.3 for Windows (highlighted in red here) to start the download. Install R Navigate to your Downloads folder and double click on the R-4.0.3-win file. NOTE: Once you double click on the file, a window might pop up that asks you if you want to allow this app to make changes to your device click YES to continue the installation A new window will pop up asking you to select a language for the installation. Select English and click OK. The next window shows the Terms and Conditions. Click Next to continue with the installation. The next window will ask you to specify where you would like to install R. Leave the default settings and click Next. The next window will ask you what components of R you want to install. Leave the default settings (all boxes ticked) and click Next. The next window will ask you if you want to customise the startup options. Select No and click Next. The next window will ask you to select/name a start menu folder. Leave the default settings (R) and click Next. The next window will ask you to select additional task that will be performed while installing R. Leave the default (Additional shortcuts unticked,Registry entries ticked) and click Next . R will now install. Once the installation is complete, click Finish. Download and Install RStudio Download RStudio R-Studio is the R user interface in which you can code. Go to the R-studio download page. On the download page, scroll down and click on the Download button under RStudio Desktop. Click on Download RStudio for Windows to download the installation file Install RStudio Navigate to your Downloads folder and double click on the RStudio-1.4.1103 file. NOTE: Once you double click on the file, a window might pop up that asks you if you want to allow this app to make changes to your device click YES to continue the installation In the installation window that opens, click Next. In the next window, you can specify where you want to install RStudio. Leave the default settings and click Next. The next window will ask you to choose a Start Menu Folder. Leave the default settings (RStudio) and click Next. RStudio is now installing. Once the intallation is completed, click on Finish. Open RStudio To open RStudio, click on the Windows logo in the left bottom corner of your screen and either type RStudio or look for the RStudio folder in the menu. Double click on Rstudio to open it. Install Packages In order to complete the course, you will need to have installed all the required packages. The simplest way to do this is to run the below code in RStudio. list.of.packages.cran &lt;- c( &quot;arm&quot;, &quot;car&quot;, &quot;corrplot&quot;, &quot;FRK&quot;, &quot;gghighlight&quot;, &quot;ggplot2&quot;, &quot;ggmap&quot;, &quot;GISTools&quot;, &quot;gridExtra&quot;, &quot;gstat&quot;, &quot;jtools&quot;, &quot;kableExtra&quot;, &quot;knitr&quot;, &quot;lme4&quot;, &quot;lmtest&quot;, &quot;lubridate&quot;, &quot;MASS&quot;, &quot;merTools&quot;, &quot;plyr&quot;, &quot;RColorBrewer&quot;, &quot;rgdal&quot;, &quot;sf&quot;, &quot;sjPlot&quot;, &quot;sp&quot;, &quot;spgwr&quot;, &quot;spatialreg&quot;, &quot;spacetime&quot;, &quot;stargazer&quot;, &quot;tidyverse&quot;, &quot;tmap&quot;, &quot;viridis&quot;, &quot;tufte&quot; ) new.packages.cran &lt;- list.of.packages.cran[!(list.of.packages.cran %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages.cran)) install.packages(new.packages.cran) for(i in 1:length(list.of.packages.cran)) { library(list.of.packages.cran[i], character.only = T) } Copy the code above by clicking the button to the top right of the code chunk which says Copy to clipboard when you hover over it. Open RStudio and click the image of a ‘white and green plus sign on top of a white square’ that says New File when you hover over it. Then, from the drop-down menu that appears, click on the option R Script. A new window with a blank background and the heading Untitled1 (indicated by red arrow above) should appear. Paste the copied code into this window by right-clicking and selecting Paste. Click on the Code menu at the top of the screen. Select Run Region from the drop-down menu, then click Run All from the second drop-down menu. This should install all the packages you need to complete the ‘Spatial Modelling for Data Scientists’ module. NOTE: The script will install several dozen packages on your computer. This could take around 20-30 minutes to complete, depending on you computer and bandwidth. Once the code has finished running, a blue arrow with a gray vertical line next to it (indicated by red arrow above) will appear at the bottom of the Console window at the bottom left of the screen. This means R has finished the task it was given and is ready for it’s next command. You can now close the R Script file you created by clicking on the x next to the header Untitled1 (indicated by red arrow above). You do not need to save the file. Congratulations!!! You have now successfully installed R, RStudio and all packages required to complete the course! You can now start coding. Uninstall R and RStudio This section shows how to uninstall programs on Windows 10 Home Edition. You only need to read this section if you have an older version of R or RStudio already installed on your computer. Right click on the Windows logo in the left bottom corner of your screen and click on Settings. At the Settings menu, click on Apps. This should take you to a page called Apps &amp; features, where you can select programs to uninstall. Scroll down until you see any program relating to R or RStudio (in this case ‘R 3.6.1,’ RStudio and ‘Rtools version 3.5’). Click on the program you wish to uninstall and select Uninstall. NOTE: Once you click Uninstall, a window might pop up that asks you if you want to allow this app to make changes to your device click YES to continue. You will then be asked whether you are sure you want to remove the program. Click Yes. The program is now uninstalling. Once this is complete, you will get a message confirming that the installation was successful. Click OK. CONGRATULATIONS YOU HAVE NOW SUCCESFULLY UNINSTALLED THE PROGRAM! Make sure to repeat this process until all programs relating to R (i.e. R, RStudio and Rtools) have been uninstalled from your machine. "],["windows-version.html", "Windows Specifications Windows Version Windows Architechture", " Windows Specifications Windows Version This guide shows you how to find out what version of Windows you are running. Here are the steps you need to follow: Right click on the Windows logo in the left bottom corner of your screen and click on system. You will find the version of your Windows under Windows Specifications and Edition (here it is Windows 10 Home as an example): Knowing the version you are running, you can then follow on to install Python for your version: If you are running Windows 10 Pro, head over here If you are running other versions, use this guide Windows Architechture IMPORTANT: This is only relevant if you do not have Windows 10 Pro If you are installing Python natively, you will need to know whether your computer is 32bit or 64bit, that is its architecture. Most modern computers are 64bit, so there is a good chance that is your case. However, please make sure to avoid trouble down the installation process. To check which architecture you have, follow these steps: Right click on the Windows logo in the left bottom corner of the task menu and select System This will bring you to your system information page The architecture of your computer can be found under the System type section (highlighted in red, for this example it is 64-bit): Knowing which architecture your computer has allows you to download the right version of Miniconda, one of the requirements for successful installation. "],["contributors.html", "Contributors", " Contributors This project was originally conceived by Dani Arribas-Bel and Francisco Rowe, from the Geographic Data Science Lab. The following additional contributors have helped improve the resource: Dominik Fahrner Natalie Rose Michael Mahony Caitlin Robinson "],["references.html", "References", " References "]]
